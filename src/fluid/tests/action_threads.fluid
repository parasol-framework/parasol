-- Test the use of action threading (asynchronous callbacks) by loading multiple pictures simultaneously.
--
-- The  testParallel() function executes the threads and then waits for them to complete by calling proc.sleep()
-- until picLoaded() sends a signal().

   require 'filesearch'

   local proc = processing.new(5.0)

   local mDisplay = mod.load('display') -- Required for the 'icons:' volume

-----------------------------------------------------------------------------------------------------------------------

function initPictures()
   for k, v in ipairs(glPictures) do
      v.pic = obj.new('picture', { path=v.path, flags='QUERY' } )
   end
end

-----------------------------------------------------------------------------------------------------------------------

function freePictures()
   for k, v in ipairs(glPictures) do
      if (v.pic != nil) then
         v.pic = nil
      end
   end
end

-----------------------------------------------------------------------------------------------------------------------
-- This callback function is called every time that a thread completes its Activate() action.

function picProcessed(ActionID, pic, Error, Key)
   if nz(Error) then
      print('Failed to load picture, error: ' .. mSys.GetErrorMsg(Error))
   end

   glPicsProcessed = glPicsProcessed + 1

   if (glPicsProcessed >= #glPictures) then
      //print('All pictures have been processed, exiting now.')
      proc.signal()
   end
end

-----------------------------------------------------------------------------------------------------------------------

function testParallel()
   glPicsProcessed = 0

   for k, v in ipairs(glPictures) do
      thread.action(v.pic, 'Activate', picProcessed, k)
   end

   -- Wait for threads to complete

   err = proc.sleep()
end

-----------------------------------------------------------------------------------------------------------------------
-- This is the control test for demonstrating how fast parallel execution can actually be versus sequential execution.

function testSequential()
   for k, v in ipairs(glPictures) do
      if (v.pic != nil) then
         v.pic.acActivate()
      end
   end
end

-----------------------------------------------------------------------------------------------------------------------

   return {
      init = function()
         glPictures = { }

         local folder = 'icons:programs/'
         local list = ''
         print('Scanning "' .. folder .. '" for SVGs')
         file.search(folder, {
            nameFilter = '.+%.svg',
            nameWild   = 'lua',
            matchFeedback = function(Path, FileName, File)
               list = list .. FileName .. ' '
               table.insert(glPictures, { path=Path .. FileName })
            end
         })

         print('Found ' .. #glPictures .. ' SVG files: ' .. list)
      end,
      tests = { 'initPictures', 'testParallel', 'freePictures', 'initPictures', 'testSequential', 'freePictures' }
   }
