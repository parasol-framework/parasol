-- $FLUID
-- Flute tests for SVG generated images.
--
-- This technique uses pre-computed checksums from SVG images, captured from a 'good' state.  If a checksum doesn't
-- match, the test will fail and the resulting image will be saved to "temp:svg_test_results/".  Check the
-- corresponding image file, if it is acceptable then update the old checksum from the test output in order to pass
-- future tests.

-----------------------------------------------------------------------------------------------------------------------

function renderSVGToBitmap(Path)
   local scene = obj.new('VectorScene', { pageWidth=1024, pageHeight=768 })
   local vp = scene.new('VectorViewport', { x=0, y=0, width='100%', height='100%' })
   local svg = obj.new('svg', { target=vp, path=Path })
   local bmp = obj.new('bitmap', { width=scene.pageWidth, height=scene.pageHeight, bitsPerPixel=32, bkgd='255,255,255,255' })
   bmp.acClear()
   scene.bitmap = bmp
   scene.acDraw()
   return bmp
end

function hashTestSVG(Path, ExpectedHash)
   local bmp = renderSVGToBitmap(glSVGFolder .. Path)
   local hash = mSys.GenCRC32(0, bmp.data, bmp.size)
   if (ExpectedHash != hash) then
      saveBitmap(bmp, Path)
      if ExpectedHash != nil then
         error('Computed hash for "' .. Path .. '" is ' .. string.format('0x%.8x', hash) .. ', expected ' .. string.format('0x%.8x', ExpectedHash))
      else
         error('Hash for "' .. Path .. '" is '  .. string.format('0x%.8x', hash))
      end
   end
end

function saveBitmap(Bitmap, Path)
   local folder, filename = file.splitPath(Path)
   local split = string.split(filename, '\\.')
   filename = split[1] .. '.png'

   local pic = obj.new('picture', { width = Bitmap.width, height = Bitmap.height, bitsPerPixel = Bitmap.bitsPerPixel, flags='NEW' })
   Bitmap.acCopyData(pic.bitmap)
   local file = obj.new('file', { flags='NEW|WRITE', path='temp:svg_test_results/' .. filename })
   pic.acSaveImage(file)
end

-----------------------------------------------------------------------------------------------------------------------

function testCircles()            hashTestSVG('paths/circles.svg', 0xc2063c38) end
function testMorph()              hashTestSVG('paths/morph.svg', 0x4f9e9c4f) end
function testEllipseVertices()    hashTestSVG('paths/ellipse_vertices.svg', 0x00d2264b) end
function testPolygons()           hashTestSVG('paths/polygons.svg', 0x2f17adec) end
function testShapes()             hashTestSVG('paths/shapes.svg', 0xd67937c9) end
function testSpirals()            hashTestSVG('paths/spirals.svg', 0x0d713688) end
function testStrokes()            hashTestSVG('paths/strokes.svg', 0x087fb44e) end
function testSuperShapes()        hashTestSVG('paths/supershapes.svg', 0x915ba38c) end
function testSuperSpiral()        hashTestSVG('paths/superspiral.svg', 0xd981df67) end
function testTransitions()        hashTestSVG('paths/transitions.svg', 0x6774b2a9) end
function testWave()               hashTestSVG('paths/wave.svg', 0xc462fb58) end

function testChevrons()           hashTestSVG('patterns/chevrons.svg', 0x42a1be4b) end
function testComplex()            hashTestSVG('patterns/complex.svg', 0x3a30b99a) end
function testDiamonds()           hashTestSVG('patterns/diamonds.svg', 0x4642c53a) end
function testDimple()             hashTestSVG('patterns/dimple.svg', 0x1806e6a0) end
function testDot()                hashTestSVG('patterns/dot.svg', 0x6736bc6c) end
function testHoneycomb()          hashTestSVG('patterns/honeycomb.svg', 0x7b678ada) end
function testSnake()              hashTestSVG('patterns/snake.svg', 0xbb7d40f0) end
function testVStripes()           hashTestSVG('patterns/vstripes.svg', 0x2f85dc21) end

function testW3Gradients01() hashTestSVG('gradients/w3-pservers-grad-01-b.svg', 0xe637a6fa) end
function testW3Gradients02() hashTestSVG('gradients/w3-pservers-grad-02-b.svg', 0x2b80ff2f) end
function testW3Gradients04() hashTestSVG('gradients/w3-pservers-grad-04-b.svg', 0x30e19fc3) end
function testW3Gradients05() hashTestSVG('gradients/w3-pservers-grad-05-b.svg', 0x80b6a37d) end
function testW3Gradients07() hashTestSVG('gradients/w3-pservers-grad-07-b.svg', 0xfb7be5fe) end
function testW3Gradients08() hashTestSVG('gradients/w3-pservers-grad-08-b.svg', 0x97f7b810) end
function testW3Gradients09() hashTestSVG('gradients/w3-pservers-grad-09-b.svg', 0xfd34d4f1) end
function testW3Gradients10() hashTestSVG('gradients/w3-pservers-grad-10-b.svg', 0x8a32cb66) end
function testW3Gradients11() hashTestSVG('gradients/w3-pservers-grad-11-b.svg', 0x4f4a58f3) end
function testW3Gradients12() hashTestSVG('gradients/w3-pservers-grad-12-b.svg', 0x2f3c750e) end
function testW3Gradients13() hashTestSVG('gradients/w3-pservers-grad-13-b.svg', 0x5dc91e94) end
function testW3Gradients14() hashTestSVG('gradients/w3-pservers-grad-14-b.svg', 0xd80b0bd2) end
function testW3Gradients15() hashTestSVG('gradients/w3-pservers-grad-15-b.svg', 0x1a612a1a) end
function testW3Gradients22() hashTestSVG('gradients/w3-pservers-grad-22-b.svg', 0x5477019b) end

function testCoarsePaper()        hashTestSVG('filters/coarse_paper.svg', 0xc4158cf1) end
function testComposite()          hashTestSVG('filters/composite.svg', 0x66a96a50) end
function testConvolve()           hashTestSVG('filters/convolve.svg', 0x29d31e69) end
function testRockyLighting()      hashTestSVG('filters/rocky_lighting.svg', 0x6e4322a9) end
function testW3Composite1()       hashTestSVG('filters/w3-composite.svg', 0xb0ac4263) end
function testW3Composite2()       hashTestSVG('filters/w3-filters-composite-02-b.svg', 0xebc363c1) end
function testW3Displacement1()    hashTestSVG('filters/w3-filters-displace-01-f.svg', 0xf2d1a46c) end
function testW3Transfer()         hashTestSVG('filters/w3-filters-comptran-01-b.svg', 0x6f8b62dd) end
function testW3Transfer2()        hashTestSVG('filters/w3-filters-color-02-b.svg', 0xd9e10af8) end
function testW3Filters()          hashTestSVG('filters/w3-filters.svg', 0x456a4b9f) end
function testW3Filters2()         hashTestSVG('filters/w3-filters2.svg', 0x67c52b0e) end
function testW3Gauss1()           hashTestSVG('filters/w3-filters-gauss-01-b.svg', 0x33114ff5) end
function testW3Gauss2()           hashTestSVG('filters/w3-filters-gauss-02-f.svg', 0x12bbbe5b) end
function testW3Gauss3()           hashTestSVG('filters/w3-filters-gauss-03-f.svg', 0xd4cc8f68) end
function testW3Image()            hashTestSVG('filters/w3-image.svg', 0xd822620c) end
function testW3Morphology()       hashTestSVG('filters/w3-morphology.svg', 0x452414d3) end
function testW3Offset()           hashTestSVG('filters/w3-offset.svg', 0x3590ac32) end
function testW3Turbulence()       hashTestSVG('filters/w3-turbulence.svg', 0x1ba38f2c) end
function testW3Lighting1()        hashTestSVG('filters/w3-filters-light-01-f.svg', 0xb4a06bf6) end
function testW3Lighting2()        hashTestSVG('filters/w3-filters-light-02-f.svg', -1) end
function testW3Lighting3()        hashTestSVG('filters/w3-filters-light-03-f.svg', 0xb3500b9a) end
function testW3Lighting4()        hashTestSVG('filters/w3-filters-light-04-f.svg', 0xf0e7d894) end
function testW3Lighting5()        hashTestSVG('filters/w3-filters-light-05-f.svg', 0x6f6758c7) end
function testW3LightingSpecular() hashTestSVG('filters/w3-filters-specular-01-f.svg', 0x8eec27e1) end
function testW3LightingDiffuse()  hashTestSVG('filters/w3-filters-diffuse-01-f.svg', 0x36fb1cac) end
function testMoonSurface()        hashTestSVG('filters/moon-surface.svg', 0x8fafd05c) end

function testTransformations()   hashTestSVG('transforms/transformations.svg', 0xaa7e064f) end
function testW3AspectRatio()     hashTestSVG('transforms/w3-aspectratio.svg', 0x4a65034c) end
function testW3SkewText()        hashTestSVG('transforms/w3-skew-text.svg', 0xd70c20b4) end
function testW3Viewbox()         hashTestSVG('transforms/w3-viewbox.svg', 0xb29ce372) end
function testW3Transform01()     hashTestSVG('transforms/w3-coords-trans-01-b.svg', 0xedbd88cb) end
function testW3Transform02()     hashTestSVG('transforms/w3-coords-trans-02-t.svg', 0x7f037fa0) end
function testW3Transform03()     hashTestSVG('transforms/w3-coords-trans-03-t.svg', 0xb167f04b) end
function testW3Transform04()     hashTestSVG('transforms/w3-coords-trans-04-t.svg', 0xf45a6134) end
function testW3Transform05()     hashTestSVG('transforms/w3-coords-trans-05-t.svg', 0x05fe81c4) end
function testW3Transform06()     hashTestSVG('transforms/w3-coords-trans-06-t.svg', 0x70364d86) end
function testW3Transform07()     hashTestSVG('transforms/w3-coords-trans-07-t.svg', 0x0b3ebff1) end
function testW3Transform08()     hashTestSVG('transforms/w3-coords-trans-08-t.svg', 0x138f7d24) end
function testW3Transform09()     hashTestSVG('transforms/w3-coords-trans-09-t.svg', 0x150bd748) end
function testW3Transform10()     hashTestSVG('transforms/w3-coords-trans-10-f.svg', 0x3a490eb5) end
function testW3Transform11()     hashTestSVG('transforms/w3-coords-trans-11-f.svg', 0x70c16d4a) end
function testW3Transform12()     hashTestSVG('transforms/w3-coords-trans-12-f.svg', 0x1f61220c) end
function testW3Transform13()     hashTestSVG('transforms/w3-coords-trans-13-f.svg', 0x30287805) end
function testW3Transform14()     hashTestSVG('transforms/w3-coords-trans-14-f.svg', 0xb68b170d) end
function testW3TransformAttr01() hashTestSVG('transforms/w3-coords-transformattr-01-f.svg', 0xe792b599) end
function testW3TransformAttr02() hashTestSVG('transforms/w3-coords-transformattr-02-f.svg', 0xa4799d40) end
function testW3TransformAttr03() hashTestSVG('transforms/w3-coords-transformattr-03-f.svg', 0x46c0bad5) end
function testW3TransformAttr04() hashTestSVG('transforms/w3-coords-transformattr-04-f.svg', 0xa0fb4dd6) end
function testW3TransformAttr05() hashTestSVG('transforms/w3-coords-transformattr-05-f.svg', 0x2a1d30cd) end

function testCSS()                hashTestSVG('misc/css.svg', 0xefdc1bcf) end
function testBrushStrokes()       hashTestSVG('misc/brush-strokes.svg', 0x21e65d43) end
function testContourGradient()    hashTestSVG('misc/contour-gradient.svg', 0x4b865f18) end

function testBottleTree()         hashTestSVG('images/bottletree.svg', 0xd7fb84ff) end
function testButton()             hashTestSVG('images/button.svg', 0x0e8f5a31) end
function testClock()              hashTestSVG('images/clock.svg', 0x8b30aba4) end
function testIceCube()            hashTestSVG('images/icecube.svg', 0xc8dc1cd4) end
function testTiger()              hashTestSVG('images/tiger.svg', 0xa7b2c808) end
function testPod()                hashTestSVG('images/pod.svg', 0xfd1904d6) end

function testClip()               hashTestSVG('masks/clip.svg', 0x209c16aa) end
function testClipViewBox()        hashTestSVG('masks/clip-viewbox.svg', 0xd66308b7) end
function testClipViaUse()         hashTestSVG('masks/clip-via-use.svg', 0x56a4a9ac) end
function testSplitCircles()       hashTestSVG('masks/split-circles.svg', 0xfc119919) end
function testInheritClip()        hashTestSVG('masks/inherit-clip-path.svg', 0xb0749a78) end
function testW3MasksFilter()      hashTestSVG('masks/w3-masking-filter-01-f.svg', 0x8cb644c2) end
function testW3MasksIntro()       hashTestSVG('masks/w3-masking-intro-01-f.svg', 0xeb147b4c) end
function testW3Masks1()           hashTestSVG('masks/w3-masking-mask-01-b.svg', 0x74e684d6) end
function testW3Masks2()           hashTestSVG('masks/w3-masking-mask-02-f.svg', 0x9f518e5f) end
function testW3MasksOpacity()     hashTestSVG('masks/w3-masking-opacity-01-b.svg', -1) end
function testW3MasksPath1()       hashTestSVG('masks/w3-masking-path-01-b.svg', 0x792ed4f4) end
function testW3MasksPath2()       hashTestSVG('masks/w3-masking-path-02-b.svg', 0x7676e492) end
function testW3MasksPath3()       hashTestSVG('masks/w3-masking-path-03-b.svg', 0x97f20e58) end
function testW3MasksPath4()       hashTestSVG('masks/w3-masking-path-04-b.svg', 0x74da608c) end
function testW3MasksPath5()       hashTestSVG('masks/w3-masking-path-05-f.svg', 0x2ad5769b) end
function testW3MasksPath7()       hashTestSVG('masks/w3-masking-path-07-b.svg', -1) end
function testW3MasksPath8()       hashTestSVG('masks/w3-masking-path-08-b.svg', 0x4d197454) end
function testW3MasksPath10()      hashTestSVG('masks/w3-masking-path-10-b.svg', 0x6ee58f7d) end
function testW3MasksPath11()      hashTestSVG('masks/w3-masking-path-11-b.svg', 0x37eef93f) end
function testW3MasksPath13()      hashTestSVG('masks/w3-masking-path-13-f.svg', 0x1760390b) end
function testW3MasksPath14()      hashTestSVG('masks/w3-masking-path-14-f.svg', 0x2755d2bf) end

function testW3Fonts1() hashTestSVG('fonts/w3-fonts-desc-01-t.svg', -1) end
function testW3Fonts2() hashTestSVG('fonts/w3-fonts-desc-02-t.svg', -1) end
function testW3Fonts3() hashTestSVG('fonts/w3-fonts-desc-03-t.svg', -1) end
function testW3Fonts4() hashTestSVG('fonts/w3-fonts-desc-04-t.svg', -1) end
function testW3Fonts5() hashTestSVG('fonts/w3-fonts-desc-05-t.svg', -1) end
function testW3Fonts6() hashTestSVG('fonts/w3-fonts-elem-01-t.svg', -1) end
function testW3Fonts7() hashTestSVG('fonts/w3-fonts-elem-02-t.svg', -1) end
function testW3Fonts8() hashTestSVG('fonts/w3-fonts-elem-03-b.svg', -1) end
function testW3Fonts9() hashTestSVG('fonts/w3-fonts-elem-04-b.svg', -1) end
function testW3Fonts10() hashTestSVG('fonts/w3-fonts-elem-05-t.svg', -1) end
function testW3Fonts11() hashTestSVG('fonts/w3-fonts-elem-06-t.svg', -1) end
function testW3Fonts12() hashTestSVG('fonts/w3-fonts-elem-07-b.svg', -1) end
function testW3Fonts13() hashTestSVG('fonts/w3-fonts-glyph-02-t.svg', -1) end
function testW3Fonts14() hashTestSVG('fonts/w3-fonts-glyph-03-t.svg', -1) end
function testW3Fonts15() hashTestSVG('fonts/w3-fonts-glyph-04-t.svg', -1) end
function testW3Fonts16() hashTestSVG('fonts/w3-fonts-kern-01-t.svg', -1) end
function testW3Fonts17() hashTestSVG('fonts/w3-fonts-overview-201-t.svg', -1) end

function testW3TextAlign1() hashTestSVG('text/w3-text-align-01-b.svg', -1) end
function testW3TextAlign2() hashTestSVG('text/w3-text-align-02-b.svg', -1) end
function testW3TextAlign3() hashTestSVG('text/w3-text-align-03-b.svg', -1) end
function testW3TextAlign4() hashTestSVG('text/w3-text-align-04-b.svg', -1) end
function testW3TextAlign5() hashTestSVG('text/w3-text-align-05-b.svg', -1) end
function testW3TextAlign6() hashTestSVG('text/w3-text-align-06-b.svg', -1) end
function testW3TextAlign7() hashTestSVG('text/w3-text-align-07-t.svg', 0x51cf3b63) end
function testW3TextAlign8() hashTestSVG('text/w3-text-align-08-b.svg', -1) end

function testW3TextIntro1() hashTestSVG('text/w3-text-intro-01-t.svg', -1) end
function testW3TextIntro2() hashTestSVG('text/w3-text-intro-02-b.svg', -1) end
function testW3TextIntro3() hashTestSVG('text/w3-text-intro-03-b.svg', -1) end
function testW3TextIntro4() hashTestSVG('text/w3-text-intro-04-t.svg', -1) end
function testW3TextIntro5() hashTestSVG('text/w3-text-intro-05-t.svg', -1) end
function testW3TextIntro6() hashTestSVG('text/w3-text-intro-06-t.svg', -1) end
function testW3TextIntro7() hashTestSVG('text/w3-text-intro-07-t.svg', -1) end
function testW3TextIntro8() hashTestSVG('text/w3-text-intro-09-b.svg', -1) end
function testW3TextIntro9() hashTestSVG('text/w3-text-intro-10-f.svg', -1) end
function testW3TextIntro10() hashTestSVG('text/w3-text-intro-11-t.svg', -1) end
function testW3TextIntro11() hashTestSVG('text/w3-text-intro-12-t.svg', -1) end

function testW3TextB1()  hashTestSVG('text/w3-text-path-01-b.svg', -1) end
function testW3TextB2()  hashTestSVG('text/w3-text-path-02-b.svg', -1) end
function testW3TextB3()  hashTestSVG('text/w3-text-spacing-01-b.svg', -1) end
function testW3TextB4()  hashTestSVG('text/w3-text-text-01-b.svg', -1) end
function testW3TextB5()  hashTestSVG('text/w3-text-text-03-b.svg', -1) end
function testW3TextB6()  hashTestSVG('text/w3-text-text-04-t.svg', -1) end
function testW3TextB7()  hashTestSVG('text/w3-text-text-05-t.svg', -1) end
function testW3TextB8()  hashTestSVG('text/w3-text-text-06-t.svg', -1) end
function testW3TextB9()  hashTestSVG('text/w3-text-text-07-t.svg', -1) end
function testW3TextB10() hashTestSVG('text/w3-text-text-08-b.svg', -1) end
function testW3TextB11() hashTestSVG('text/w3-text-text-09-t.svg', -1) end
function testW3TextB12() hashTestSVG('text/w3-text-text-10-t.svg', -1) end
function testW3TextB13() hashTestSVG('text/w3-text-text-11-t.svg', -1) end
function testW3TextB14() hashTestSVG('text/w3-text-text-12-t.svg', -1) end
function testW3TextB15() hashTestSVG('text/w3-text-tref-01-b.svg', -1) end
function testW3TextB16() hashTestSVG('text/w3-text-tref-02-b.svg', -1) end
function testW3TextB17() hashTestSVG('text/w3-text-tref-03-b.svg', -1) end
function testW3TextB18() hashTestSVG('text/w3-text-tselect-01-b.svg', -1) end
function testW3TextB19() hashTestSVG('text/w3-text-tselect-02-f.svg', -1) end
function testW3TextB20() hashTestSVG('text/w3-text-tselect-03-f.svg', -1) end
function testW3TextB21() hashTestSVG('text/w3-text-tspan-01-b.svg', -1) end
function testW3TextB22() hashTestSVG('text/w3-text-tspan-02-b.svg', -1) end
function testW3TextB23() hashTestSVG('text/w3-text-ws-01-t.svg', -1) end
function testW3TextB24() hashTestSVG('text/w3-text-ws-02-t.svg', -1) end
function testW3TextB25() hashTestSVG('text/w3-text-ws-03-t.svg', -1) end

-----------------------------------------------------------------------------------------------------------------------

   return {
      tests = {
        -- Text
        'testW3TextAlign7',
        -- Masks
        'testW3MasksPath1',
        'testW3MasksPath2',
        'testW3MasksPath3',
        'testW3MasksPath4',
        'testW3MasksPath5',
        --'testW3MasksPath7',
        'testW3MasksPath8',
        'testW3MasksPath10',
        'testW3MasksPath11',
        'testW3MasksPath13',
        'testW3MasksPath14',
        'testW3MasksFilter',
        'testW3MasksIntro',
        'testW3Masks1',
        'testW3Masks2',
        --'testW3MasksOpacity',
        'testSplitCircles',
        'testInheritClip',
        'testW3Gradients01',
        'testW3Gradients02',
        'testW3Gradients04',
        'testW3Gradients05',
        'testW3Gradients07',
        'testW3Gradients08',
        'testW3Gradients09',
        'testW3Gradients10',
        'testW3Gradients11',
        'testW3Gradients12',
        'testW3Gradients13',
        'testW3Gradients14',
        'testW3Gradients15',
        'testW3Gradients22',
        -- Patterns
        'testChevrons',
        'testComplex',
        'testDiamonds',
        'testDimple',
        'testDot',
        'testHoneycomb',
        'testSnake',
        'testVStripes',
        -- Filters
        'testCoarsePaper',
        'testConvolve',
        'testMoonSurface',
        'testComposite',
        'testW3Composite1',
        'testW3Composite2',
        'testW3Displacement1',
        'testW3Filters',
        'testW3Filters2',
        'testW3Gauss1',
        'testW3Gauss2',
        'testW3Gauss3',
        'testW3Transfer',
        'testW3Transfer2',
        'testW3LightingSpecular',
        'testW3LightingDiffuse',
        'testW3Lighting1',
        --'testW3Lighting2',
        'testW3Lighting3',
        'testW3Lighting4',
        'testW3Lighting5',
        'testW3Image',
        'testRockyLighting',
        'testW3Morphology',
        'testW3Offset',
        'testW3Turbulence',
        -- Transforms
        'testTransformations',
        'testW3AspectRatio',
        'testW3SkewText',
        'testW3Viewbox',
        'testW3Transform01',
        'testW3Transform02',
        'testW3Transform03',
        'testW3Transform04',
        'testW3Transform05',
        'testW3Transform06',
        'testW3Transform07',
        'testW3Transform08',
        'testW3Transform09',
        'testW3Transform10',
        'testW3Transform11',
        'testW3Transform12',
        'testW3Transform13',
        'testW3Transform14',
        'testW3TransformAttr01',
        'testW3TransformAttr02',
        'testW3TransformAttr03',
        'testW3TransformAttr04',
        'testW3TransformAttr05',
        -- Misc
        'testCSS',
        'testBrushStrokes',
        'testContourGradient',
        -- Stock Images
        'testBottleTree',
        'testButton',
        'testClock',
        'testIceCube',
        'testTiger',
        'testPod',
        -- Paths
        'testCircles',
        'testClip',
        'testClipViewBox',
        'testClipViaUse',
        'testEllipseVertices',
        'testMorph',
        'testPolygons',
        'testShapes',
        'testSpirals',
        'testStrokes',
        'testSuperShapes',
        'testSuperSpiral',
        'testTransitions',
        'testWave'
      },
      init = function(Folder)
         glSVGFolder = Folder
      end,
      cleanup = function()

      end
   }
