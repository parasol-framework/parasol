-- Bind Address Test Suite
--
-- This test verifies the bind address functionality in the Network module including:
-- - Binding to specific IP addresses (localhost, specific IPs)
-- - Binding to all interfaces (0.0.0.0, ::)
-- - Default binding behavior
-- - IPv4 and IPv6 dual-stack binding

   require 'common'
   include 'network'

local glBasePort = 19760  -- Base port for tests (each test uses a different port)

------------------------------------------------------------------------------------------------------------------------
-- Test binding to localhost only (IPv4)

function testBindLocalhost()
   local port = glBasePort + 1
   local proc = processing.new({ timeout = 3.0 })

   local server = obj.new('netsocket', {
      port = port,
      address = '127.0.0.1',
      flags = 'SERVER'
   })

   local client = obj.new('netsocket', {
      address = '127.0.0.1',
      port = port,
      feedback = function(Socket, State)
         assert(Socket, 'Socket parameter not defined.')
         if (State == NTC_CONNECTED) then
            proc.signal()
         end
      end,
   })

   proc.sleep()

   assert(client.state == NTC_CONNECTED, 'Client failed to connect from localhost')
end

------------------------------------------------------------------------------------------------------------------------
-- Test binding to all interfaces (0.0.0.0)

function testBindAllInterfaces()
   local port = glBasePort + 2
   local server = obj.new('netsocket', { port = port, address = '0.0.0.0', flags = 'SERVER' })
   assert(server, 'Failed to bind to 0.0.0.0:' .. port)
end

------------------------------------------------------------------------------------------------------------------------
-- Test default binding (no address specified)

function testDefaultBinding()
   local port = glBasePort + 3
   local server = obj.new('netsocket', { port = port, flags = 'SERVER' })
   assert(server, 'Failed to bind to port ' .. port)
end

------------------------------------------------------------------------------------------------------------------------
-- Test binding with wildcard '*'

function testBindWildcard()
   local port = glBasePort + 4
   local server = obj.new('netsocket', { port = port, address = '*', flags = 'SERVER' })
   assert(server, 'Failed to bind with wildcard to port ' .. port)
end

------------------------------------------------------------------------------------------------------------------------
-- Test IPv6 localhost binding

function testBindIPv6Localhost()
   local port = glBasePort + 5
   local server = obj.new('netsocket', { port = port, address = '::1', flags = 'SERVER' })
   assert(server, 'Failed to bind to ::1:' .. port .. ' (IPv6 may not be available)')
end

------------------------------------------------------------------------------------------------------------------------
-- Test IPv6 all interfaces binding

function testBindIPv6AllInterfaces()
   local port = glBasePort + 6
   local server = obj.new('netsocket', { port = port, address = '::', flags = 'SERVER' })
   assert(server,  'Failed to bind to :::' .. port .. ' (IPv6 may not be available)')
end

------------------------------------------------------------------------------------------------------------------------
-- Test binding with 'localhost' string

function testBindLocalhostString()
   local port = glBasePort + 7
   local server = obj.new('netsocket', { port = port, address = 'localhost', flags = 'SERVER' })
   if not server then error('Failed to bind to localhost:' .. port) end
end

------------------------------------------------------------------------------------------------------------------------
-- Test invalid bind address

function testInvalidBindAddress()
   local port = glBasePort + 8
   local server
   catch(function() server = obj.new('netsocket', { port = port, address = '999.999.999.999', flags = 'SERVER' }) end)
   if server then error('Unexpectedly succeeded binding to invalid address') end
end

------------------------------------------------------------------------------------------------------------------------
-- Test concurrent servers on different addresses

function testConcurrentServers()
   local port = glBasePort + 9

   -- First server on localhost
   local server1 = obj.new('netsocket', { port = port, address = '127.0.0.1', flags = 'SERVER' })

   -- Second server on different port, all interfaces
   local server2 = obj.new('netsocket', { port = port + 1, address = '0.0.0.0', flags = 'SERVER' })

   assert(server1 and server2, 'Failed to create concurrent servers')
end

------------------------------------------------------------------------------------------------------------------------

   return {
      tests = {
         'testBindLocalhost',
         'testBindAllInterfaces',
         'testDefaultBinding',
         'testBindWildcard',
         'testBindIPv6Localhost',
         'testBindIPv6AllInterfaces',
         'testBindLocalhostString',
         'testInvalidBindAddress',
         'testConcurrentServers'
      }
   }
