-- Unicode handling, properties, and case folding coverage

function testUnicodeEscapeMatches()
   local matcher = regex.new("\\u{00E9}")
   assert(matcher.test("cafÃ©"), "Unicode escape should match accented character")
   assert(not matcher.test("cafe"), "Unicode escape should not match plain ASCII")
end

function testAstralSymbolDetection()
   local matcher = regex.new("\\u{1F642}")
   assert(matcher.test("Hello ðŸ™‚"), "Astral plane escape should match emoji")
end

function testUnicodeProperties()
   local matcher = regex.new("^\\p{Lu}+$")
   assert(matcher.test("Î©Î¨"), "Unicode Lu property should recognise Greek capitals")
   assert(not matcher.test("Î©Ïˆ"), "Unicode property should reject lowercase mixture")
end

function testUnicodeCaseFolding()
   local matcher = regex.new("caf\\u{00E9}", regex.ICASE)
   assert(matcher.test("CAFÃ‰"), "ICASE should fold accented characters")
end

function testSplitOnUnicodeWhitespace()
   local matcher = regex.new("\\s+")
   local nbsp = string.char(0xC2, 0xA0)
   local result = matcher.split("first" .. nbsp .. "second\tthird")
   assert(#result == 3, "Split should handle non breaking space and tab")
   assert(result[2] == "second", "Second token should survive Unicode whitespace split")
end

return {
   tests = {
      'testUnicodeEscapeMatches',
      'testAstralSymbolDetection',
      'testUnicodeProperties',
      'testUnicodeCaseFolding',
      'testSplitOnUnicodeWhitespace'
   }
}
