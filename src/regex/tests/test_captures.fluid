-- Flute tests verifying capture normalisation behaviour

function testOptionalGroups()
   local matcher = regex.new("(\\d+)(\\.\\d+)?")
   local result = matcher.match("42")

   assert(result, "Should match the number")
   assert(#result == 3, "Expect three captures: full, integer, optional")
   assert(result[1] == "42", "Full match should be 42")
   assert(result[2] == "42", "Integer capture should be 42")
   assert(result[3] == "", "Optional group should be empty when not matched")
end

function testNestedOptional()
   local matcher = regex.new("(a|(b|c))?d")
   local result = matcher.match("d")

   assert(result, "Should match the single letter")
   assert(#result == 4, "Expect full match and three nested groups")
   assert(result[1] == "d", "Full match should be d")
   assert(result[2] == "", "Outer optional group should be empty")
   assert(result[3] == "", "Inner alternation should be empty")
   assert(result[4] == "", "Innermost alternation should be empty")
end

return {
   tests = {
      'testOptionalGroups',
      'testNestedOptional'
   }
}
