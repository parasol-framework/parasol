<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="class.xsl"?>

<book>
  <info>
    <name>Resize</name>
    <type>class</type>
    <module>Widget</module>
    <comment>Controls the resizing of surfaces in the UI.</comment>
    <version>1</version>
    <id>192fa5b7</id>
    <idstring>ID_RESIZE</idstring>
    <category>GUI</category>
    <include>modules/resize.h</include>
    <copyright>Paul Manias 2003-2020</copyright>
    <description>
<p>The Resize class is used for declaring user-interactive resizing areas.  In most cases it is applied to the edges of <class name="Surface">Surface</class> objects so that the user can drag the edge to a new location.  When creating a new Resize object, you can choose the edges of the surface border that should be monitored for resizing, or alternatively you may pin-point the resizing area through standard dimension specifications.  The following example demonstrates the use of both methods:</p>
<pre>surface = obj.new('surface', {
   x=50, y=70, width=250, height=300
})
surface.new('resize', {
   border='left|right|top|bottom',
   bordersize=10
})
surface.new('resize', {
   xoffset=10, yoffset=10, width=20, height=20,
   direction='all'
})
</pre>
<p>The first Resize object monitors all four sides of the surface, within an area that does not exceed 10 units on either edge.  The second Resize object monitors an area that is 20x20 units in size at an offset of 10 units from the bottom right edge.  The <field>Direction</field> field has been set to a value of <code>all</code>, which means that the user can resize the surface area in any direction by interacting with the Resize object.</p>
<p>When using Resize objects to manage the dimensions of a surface, it is recommended that the MinWidth, MinHeight, MaxWidth and MaxHeight fields are used to prevent excessive shrinkage or expansion.  These values must be set in the <class name="Surface">Surface</class> object that the resize functionality is being applied to.</p></description>
    <source>
      <file>class_resize.cpp</file>
    </source>
  </info>

  <actions>
  </actions>

  <fields>
    <field>
      <name>Border</name>
      <comment>Defines the surface edges that need to be monitored.</comment>
      <access read="R" write="W">Read/Write</access>
      <type lookup="EDGE">INT</type>
      <description>
<p>Use the Border field to declare the surface edges that will be user-interactive.  If not defined on initialisation, the specific dimensions for a single monitored area should be provided instead.</p>
<p>The size of the borders that are to be monitored must be set through the <field>BorderSize</field> field.</p>
<types lookup="EDGE"/>
      </description>
    </field>

    <field>
      <name>BorderSize</name>
      <comment>Determines the size of the monitored regions when borders are used.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>INT</type>
      <description>
<p>If the edges in the <field>Border</field> have been defined, it is recommended that the BorderSize field is set to the desired size of the the monitored area.  If not set, a default value will be applied.</p>
      </description>
    </field>

    <field>
      <name>Button</name>
      <comment>Defines the user button that starts the resize process.</comment>
      <access read="R" write="W">Read/Write</access>
      <type lookup="JET">INT</type>
      <description>
<p>By default, the user can interact with a resizeable area by moving the mouse over it and pressing/holding the left mouse button or its UI equivalent.  To change the button that the UI responds to, set the Button field to a different value. Valid settings are JET_LMB, JET_RMB and JET_MMB.</p>
<types lookup="JET"/>
      </description>
    </field>

    <field>
      <name>Direction</name>
      <comment>Limits the directions in which the user can apply resizing.</comment>
      <access read="R" write="W">Read/Write</access>
      <type lookup="MOVE">INT</type>
      <description>
<p>If using a Resize object to monitor a specific region rather than using the <field>Border</field> functionality, it is necessary to declare the directions in which the user is allowed to apply the resize.  Setting a direction such as <code>UP|LEFT</code> would allow the user to resize towards the top left corner of the display, but not the bottom right corner.</p>
<p>Note that if the <field>Border</field> field has been defined then the Direction is ignored.</p>
<types lookup="MOVE"/>
      </description>
    </field>

    <field>
      <name>Object</name>
      <comment>Defines the object that is to be the recipient of the Resize() action.</comment>
      <access read="R" write="W">Read/Write</access>
      <type>OBJECTID</type>
      <description>
<p>This field determines the object that receives resize messages when the user interacts with the Resize object.  By default the Resize object's container will receive the messages.</p>
      </description>
    </field>

  </fields>
  <structs>
  </structs>
</book>
