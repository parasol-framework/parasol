<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="class.xsl"?>

<book>
  <info>
    <name>ScintillaSearch</name>
    <type>class</type>
    <module>Scintilla</module>
    <comment>Provides search functionality for use on Scintilla objects.</comment>
    <version>1</version>
    <id>97a9057e</id>
    <idstring>ID_SCINTILLASEARCH</idstring>
    <category>Tool</category>
    <include>modules/scintillasearch.h</include>
    <copyright>Paul Manias Â© 2005-2017</copyright>
    <source>
      <file>class_scintilla_search.cxx</file>
    </source>
  </info>

  <methods>
    <method>
      <name>Find</name>
      <comment>Searches for a specific text string.</comment>
      <prototype>ERROR ssFind(OBJECTPTR Object, LONG * Pos, LONG Flags)</prototype>
      <input>
        <param type="LONG *" name="Pos">The position to start searching from.  Set to -1 to start from the cursor position.  This parameter is updated with the byte position of the discovered string sequence.</param>
        <param type="LONG" name="Flags" lookup="STF">Optional flags.</param>
      </input>
      <description>
<p>Call Find to initiate a string search within the targeted <field>Scintilla</field> object.  The method will scan for the first instance of the <field>Text</field> string sequence and return its position in Pos.  The Flags parameter defines special options that affect the search process.</p>
<p>To find subsequent string matches, call one of either the <method>Next</method> or <method>Prev</method> methods.</p>
      </description>
    </method>

    <method>
      <name>Next</name>
      <comment>Continues a text search.</comment>
      <prototype>ERROR ssNext(OBJECTPTR Object, LONG * Pos)</prototype>
      <input>
        <param type="LONG *" name="Pos">The byte-position of the discovered string sequence is returned here.</param>
      </input>
      <description>
<p>Use Next to continue a search after calling the <method>Find</method> method.  If a string sequence matching that of <field>Text</field> is discovered, its byte position will be returned in the Pos parameter.  If a new match is not discovered then ERR_Search is returned to indicate an end to the search.</p>
      </description>
    </method>

    <method>
      <name>Prev</name>
      <comment>Continues a text search in reverse.</comment>
      <prototype>ERROR ssPrev(OBJECTPTR Object, LONG * Pos)</prototype>
      <input>
        <param type="LONG *" name="Pos">The byte-position of the discovered string is returned here.</param>
      </input>
      <description>
<p>The Prev method operates under the same circumstances as <method>Next</method>, except that the search will be in reverse.  Please refer to <method>Next</method> for further information.</p>
      </description>
    </method>

  </methods>

  <fields>
    <field>
      <name>End</name>
      <comment>End of the current/most recent selection</comment>
      <access>-/-</access>
      <type>INT</type>
    </field>

    <field>
      <name>Flags</name>
      <comment>Optional flags.</comment>
      <access read="R" write="W">Read/Write</access>
      <type lookup="STF">INT</type>
      <description>
<p>Optional flags that affect the search process are specified here.</p>
<types lookup="STF"/>
      </description>
    </field>

    <field>
      <name>Scintilla</name>
      <comment>Targets a Scintilla object for searching.</comment>
      <access read="R" write="I">Read/Init</access>
      <type class="Scintilla">*Scintilla</type>
      <description>
<p>A Scintilla object must be targeted in this field in order to perform the search process.</p>
      </description>
    </field>

    <field>
      <name>Start</name>
      <comment>Start of the current/most recent selection</comment>
      <access>-/-</access>
      <type>INT</type>
    </field>

    <field>
      <name>Text</name>
      <comment>The string sequence to search for.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>CSTRING</type>
      <description>
<p>This field defines the string sequence that will be searched for when calling either <method>Find</method>, <method>Next</method> or <method>Prev</method>.</p>
      </description>
    </field>

  </fields>
  <types>
    <constants lookup="SCLEX" comment="Scintilla Lexers.  These codes originate from the Scintilla library.">
      <const name="PERL">Perl</const>
      <const name="ASSEMBLER">Assembler</const>
      <const name="ASP">Active Server Pages</const>
      <const name="PYTHON">Python</const>
      <const name="CPP">C or C++</const>
      <const name="FLUID">Fluid</const>
      <const name="VBSCRIPT">VBScript</const>
      <const name="RUBY">Ruby</const>
      <const name="SQL">SQL</const>
      <const name="PROPERTIES">Properties</const>
      <const name="BATCH">Batch</const>
      <const name="MAKEFILE">Makefile</const>
      <const name="REBOL">Rebol</const>
      <const name="PASCAL">Pascal</const>
      <const name="HTML">HTML</const>
      <const name="PHPSCRIPT">PHP Script</const>
      <const name="BASH">Bash</const>
      <const name="CSS">CSS</const>
      <const name="XML">XML</const>
      <const name="ERRORLIST">ErrorList</const>
      <const name="VB">Visual Basic</const>
      <const name="DIFF">Diff</const>
    </constants>

    <constants lookup="SEF" comment="Flags for EventCallback and EventFlags">
      <const name="MODIFIED">The content has changed to a modified state, i.e. the user has made an edit.  The modified state will remain until the content is saved.</const>
      <const name="NEW_CHAR">At least one new character has been inserted.</const>
      <const name="CURSOR_POS">The cursor position has changed.</const>
      <const name="FAIL_RO">User attempt to edit read-only content.</const>
    </constants>

    <constants lookup="SCF" comment="Optional flags.">
      <const name="DISABLED">Read-only.  This flag is set if the Scintilla object has been deactivated with the Disable action.</const>
      <const name="EXT_PAGE">Extends the length of the document by one blank page.  This is a visual effect that only has an impact when the user scrolls to the end of the document.</const>
      <const name="EDIT">Must be defined if the document is to be editable via user input.</const>
      <const name="DETECT_LEXER">Automatic lexer detection will occur on initialisation and at any time that a source file is loaded.</const>
    </constants>

    <constants lookup="STF" comment="Scintilla search flags.">
      <const name="SCAN_SELECTION">Limit search to within the user's current selection.</const>
      <const name="BACKWARDS">Search backwards.</const>
      <const name="MOVE_CURSOR">The cursor is moved to the discovered string.  If not set, the string is auto-selected.</const>
      <const name="WRAP">Wrap search at the end of the document.</const>
      <const name="EXPRESSION">Search text is a regular expression.</const>
      <const name="CASE">Case sensitive search.</const>
    </constants>

  </types>
  <structs>
  </structs>
</book>
