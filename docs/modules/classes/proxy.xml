<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="class.xsl"?>

<book>
  <info>
    <name>Proxy</name>
    <type>class</type>
    <module>Network</module>
    <comment>Manages user settings for proxy servers.</comment>
    <version>1</version>
    <id>102a23e7</id>
    <idstring>ID_PROXY</idstring>
    <category>Network</category>
    <include>modules/proxy.h</include>
    <copyright>Paul Manias Â© 2005-2020</copyright>
    <description>
<p>The proxy server class provides a global management service for a user's proxy servers.  You can alter proxy settings manually or present the user with a dialog box to edit and create new proxies.  Scanning functions are also provided with filtering, allowing you to scan for proxies that should be used with the user's network connection.</p>
<p>Proxy objects are designed to work similarly to database recordsets. Creating a new proxy object will allow you to create a new proxy record if all required fields are set and the object is saved.</p>
<p>Searching through the records with the <method>Find</method> and <method>FindNext</method> methods will move the recordset through each entry the proxy database.  You may change existing values of any proxy and then save the changes by calling the <action>SaveSettings</action> action.</p></description>
    <source>
      <file>class_proxy.cpp</file>
    </source>
  </info>

  <actions>
    <action>
      <name>Disable</name>
      <comment>Marks a proxy as disabled.</comment>
      <description>
<p>Calling the Disable action will mark the proxy as disabled.  Disabled proxies remain in the system but are ignored by programs that scan the database for active proxies.</p>
<p>The change will not come into effect until the proxy record is saved.</p>
      </description>
    </action>

    <action>
      <name>Enable</name>
      <comment>Enables a proxy.</comment>
      <description>
<p>Calling the Enable action will mark the proxy as enabled.  The change will not come into effect until the proxy record is saved.</p>
      </description>
    </action>

    <action>
      <name>SaveSettings</name>
      <comment>Permanently saves user configurable settings for a proxy.</comment>
      <description>
<p>This action saves a user's settings for a proxy. Saving the proxy settings will make them available to the user on subsequent logins.</p>
<p>Settings are saved to the user's local account under <code>user:config/network/proxies.cfg</code>.  It is possible for the administrator to define proxy settings as the default for all users by copying the <code>proxies.cfg</code> file to the <code>system:users/default/config/network/</code> folder.</p>
      </description>
    </action>

  </actions>

  <methods>
    <method>
      <name>Delete</name>
      <comment>Removes a proxy from the database.</comment>
      <prototype>ERROR prxDelete(OBJECTPTR Object)</prototype>
      <description>
<p>Call the Delete method to remove a proxy from the system.  The proxy will be permanently removed from the proxy database on the success of this function.</p>
      </description>
      <result>
        <error code="Okay">Proxy deleted.</error>
      </result>
    </method>

    <method>
      <name>Find</name>
      <comment>Search for a proxy that matches a set of filters.</comment>
      <prototype>ERROR prxFind(OBJECTPTR Object, LONG Port, LONG Enabled)</prototype>
      <input>
        <param type="LONG" name="Port">The port number  to access.  If zero, all proxies will be returned if you perform a looped search.</param>
        <param type="LONG" name="Enabled">Set to TRUE to return only enabled proxies, FALSE for disabled proxies or -1 for all proxies.</param>
      </input>
      <description>
<p>The following example searches for all proxies available for use on port 80 (HTTP).</p>
<pre>if (!(CreateObject(ID_PROXY, 0, &amp;proxy, TAGEND))) {
   if (!prxFind(proxy, 80)) {
      do {
         ...
      } while (!prxFindNext(proxy));
      FreeResource(proxy);
   }
   acFree(proxy);
}
</pre>
      </description>
      <result>
        <error code="NoSearchResult">No matching proxy was discovered.</error>
        <error code="Okay">A proxy was discovered.</error>
      </result>
    </method>

    <method>
      <name>FindNext</name>
      <comment>Continues an initiated search.</comment>
      <prototype>ERROR prxFindNext(OBJECTPTR Object)</prototype>
      <description>
<p>This method continues searches that have been initiated by the <method>Find</method> method. If a proxy is found that matches the filter, ERR_Okay is returned and the details of the proxy object will reflect the data of the discovered record. ERR_NoSearchResult is returned if there are no more matching proxies.</p>
      </description>
      <result>
        <error code="NoSearchResult">No matching proxy was discovered.</error>
        <error code="Okay">A proxy was discovered.</error>
      </result>
    </method>

  </methods>

  <fields>
    <field>
      <name>Enabled</name>
      <comment>All proxies are enabled by default until this field is set to FALSE.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>INT</type>
      <description>
<p>To disable a proxy, set this field to FALSE or call the <action>Disable</action> action.  This prevents the proxy from being discovered in searches unless</p>
      </description>
    </field>

    <field>
      <name>GatewayFilter</name>
      <comment>The IP address of the gateway that the proxy is limited to.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>STRING</type>
      <description>
<p>The GatewayFilter defines the IP address of the gateway that this proxy is limited to. It is intended to limit the results of searches performed by the <method>Find</method> method.</p>
      </description>
    </field>

    <field>
      <name>Host</name>
      <comment>If TRUE, the proxy settings are derived from the host operating system's default settings.</comment>
      <access>-/-</access>
      <type>INT</type>
      <description>
<p>If Host is set to TRUE, the proxy settings are derived from the host operating system's default settings.  Hosted proxies are treated differently to user proxies - they have priority, and any changes are applied directly to the host system rather than the user's configuration.</p>
      </description>
    </field>

    <field>
      <name>NetworkFilter</name>
      <comment>The name of the network that the proxy is limited to.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>STRING</type>
      <description>
<p>The NetworkFilter defines the name of the network that this proxy is limited to. It is intended to limit the results of searches performed by the <method>Find</method> method.</p>
<p>This filter must not be set if the proxy needs to work on an unnamed network.</p>
      </description>
    </field>

    <field>
      <name>Password</name>
      <comment>The password to use when authenticating against the proxy server.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>STRING</type>
      <description>
<p>If the proxy requires authentication, the user password may be set here to enSable an automated authentication process. If the password is not set, a dialog will need to be used to prompt the user for the password before communicating with the proxy.</p>
      </description>
    </field>

    <field>
      <name>Port</name>
      <comment>Defines the ports supported by this proxy.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>INT</type>
      <description>
<p>The Port defines the port that the proxy server is supporting, e.g. port 80 for HTTP.</p>
      </description>
    </field>

    <field>
      <name>ProxyName</name>
      <comment>A human readable name for the proxy server entry.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>STRING</type>
      <description>
<p>A proxy can be given a human readable name by setting this field.</p>
      </description>
    </field>

    <field>
      <name>Record</name>
      <comment>The unique ID of the current proxy record.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>INT</type>
      <description>
<p>The Record is set to the unique ID of the current proxy record.  If no record is indexed then the Record is set to zero.</p>
<p>If you set the Record manually, the proxy object will attempt to lookup that record.  ERR_Okay will be returned if the record is found and all record fields will be updated to reflect the data of that proxy.</p>
      </description>
    </field>

    <field>
      <name>Server</name>
      <comment>The destination address of the proxy server - may be an IP address or resolvable domain name.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>STRING</type>
      <description>
<p>The domain name or IP address of the proxy server must be defined here.</p>
      </description>
    </field>

    <field>
      <name>ServerPort</name>
      <comment>The port that is used for proxy server communication.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>INT</type>
      <description>
<p>The port used to communicate with the proxy server must be defined here.</p>
      </description>
    </field>

    <field>
      <name>Username</name>
      <comment>The username to use when authenticating against the proxy server.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>STRING</type>
      <description>
<p>If the proxy requires authentication, the user name may be set here to enable an automated authentication process. If the username is not set, a dialog will be required to prompt the user for the user name before communicating with the proxy server.</p>
      </description>
    </field>

  </fields>
  <types>
    <constants lookup="IPADDR" comment="Address types for the IPAddress structure.">
      <const name="V4"/>
      <const name="V6"/>
    </constants>

    <constants lookup="NSF">
      <const name="SERVER">Puts the socket into server mode.  In this state the netsocket object will wait for incoming connections from clients.</const>
      <const name="SSL">Use Secure Sockets Layer for all communication.</const>
      <const name="MULTI_CONNECT">Allow multiple connections from the same IP when in server mode.</const>
      <const name="DEBUG">Print extra log messages.</const>
      <const name="ASYNC_RESOLVE">Use asynchronous (non-parallel) DNS resolutions in ResolveAddress() and ResolveName().</const>
    </constants>

    <constants lookup="NTC" comment="NetSocket states">
      <const name="DISCONNECTED">There is no connection.</const>
      <const name="CONNECTING">A connection is being established.</const>
      <const name="CONNECTING_SSL">An SSL connection is being established.</const>
      <const name="CONNECTED">There is an active connection at present.</const>
    </constants>

  </types>
  <structs>
    <struct name="IPAddress">
      <field name="Data" type="ULONG" size="4">128-bit array for supporting both V4 and V6 IP addresses.</field>
      <field name="Type" type="LONG" lookup="IPADDR"></field>
      <field name="Pad" type="LONG">Unused padding for 64-bit alignment</field>
    </struct>

    <struct name="rkNetClient" comment="Simple data storage class utilised by NetSocket to represent a client machine/IP.">
      <field name="IP" type="char" size="8">IP address in 4/8-byte format</field>
      <field name="Next" type="struct rkNetClient *">Next client in the chain</field>
      <field name="Prev" type="struct rkNetClient *">Previous client in the chain</field>
      <field name="NetSocket" type="struct rkNetSocket *">Reference to the parent socket</field>
      <field name="Sockets" type="struct rkClientSocket *">Pointer to a list of sockets opened with this client.</field>
      <field name="UserData" type="APTR">Free for user data storage.</field>
      <field name="TotalSockets" type="LONG">Count of all created sockets</field>
    </struct>

  </structs>
</book>
