<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="class.xsl"?>

<book>
  <info>
    <name>VectorViewport</name>
    <type>class</type>
    <module>Vector</module>
    <comment>Provides support for viewport definitions within a vector tree.</comment>
    <version>1</version>
    <id>15da8fb8</id>
    <idstring>ID_VECTORVIEWPORT</idstring>
    <category>Graphics</category>
    <include>modules/vectorviewport.h</include>
    <copyright>Paul Manias Â© 2010-2022</copyright>
    <description>
<p>This class is used to declare a viewport within a vector scene graph.  A master viewport is required as the first object in a <class name="VectorScene">VectorScene</class> and it must contain all vector graphics content.</p>
<p>The size of the viewport is initially set to (0,0,100%,100%) so as to be all inclusive.  Setting the <field>X</field>, <field>Y</field>, <field>Width</field> and <field>Height</field> fields will determine the position and clipping of the displayed content (the 'target area').  The <field>ViewX</field>, <field>ViewY</field>, <field>ViewWidth</field> and <field>ViewHeight</field> fields declare the viewbox ('source area') that will be sampled for the target.</p>
<p>To configure the scaling and alignment method that is applied to the viewport content, set the <field>AspectRatio</field> field.</p></description>
    <source>
      <file path="vectors/">viewport.cpp</file>
    </source>
  </info>

  <actions>
    <action>
      <name>Clear</name>
      <comment>Free all child objects contained by the viewport.</comment>
    </action>

    <action>
      <name>Move</name>
      <comment>Move the position of the viewport by delta X, Y.</comment>
    </action>

    <action>
      <name>MoveToPoint</name>
      <comment>Move the position of the viewport to a fixed point.</comment>
    </action>

    <action>
      <name>Resize</name>
      <comment>Resize a viewport to a fixed size.</comment>
    </action>

  </actions>

  <fields>
    <field>
      <name>AbsX</name>
      <comment>The horizontal position of the viewport, relative to (0,0).</comment>
      <access read="G">Get</access>
      <type>INT</type>
      <description>
<p>This field will return the left-most boundary of the viewport, relative to point (0,0) of the scene graph.  Transforms are taken into consideration when calculating this value.</p>
      </description>
    </field>

    <field>
      <name>AbsY</name>
      <comment>The vertical position of the viewport, relative to (0,0).</comment>
      <access read="G">Get</access>
      <type>INT</type>
      <description>
<p>This field will return the top-most boundary of the viewport, relative to point (0,0) of the scene graph.  Transforms are taken into consideration when calculating this value.</p>
      </description>
    </field>

    <field>
      <name>AspectRatio</name>
      <comment>Flags that affect the aspect ratio of vectors within the viewport.</comment>
      <access read="G" write="S">Get/Set</access>
      <type lookup="ARF">INT</type>
      <description>
<p>Defining an aspect ratio allows finer control over the position and scale of the viewport's content within its target area.</p>
<types lookup="ARF"/>
      </description>
    </field>

    <field>
      <name>Dimensions</name>
      <comment>Dimension flags define whether individual dimension fields contain fixed or relative values.</comment>
      <access read="G" write="S">Get/Set</access>
      <type lookup="DMF">INT</type>
      <description>
<types lookup="DMF"/>
      </description>
    </field>

    <field>
      <name>DragCallback</name>
      <comment>Receiver for drag requests originating from the viewport.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>FUNCTION</type>
      <description>
<p>Set the DragCallback field with a callback function to receive drag requests from the viewport's user input.  When the user drags the viewport, the callback will receive the user's desired (X, Y) target coordinates.  For unimpeded dragging, have the callback set the viewport's X and Y values to match the incoming coordinates, then redraw the scene.</p>
<p>The prototype for the callback function is as follows, where OriginX and OriginY refer to the (X,Y) position of the vector at initiation of the drag.</p>
<p>
<code>void function(*VectorViewport, DOUBLE X, DOUBLE Y, DOUBLE OriginX, DOUBLE OriginY)</code></p>
<p>Setting this field to NULL will turn off the callback.</p>
<p>It is required that the parent <class name="VectorScene">VectorScene</class> is associated with a <class name="Surface">Surface</class> for this feature to work.</p>
      </description>
    </field>

    <field>
      <name>Height</name>
      <comment>The height of the viewport's target area.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>DOUBLE</type>
      <description>
<p>The height of the viewport's target area is defined here as a fixed or relative value.  The default value is 100% for full coverage.</p>
      </description>
    </field>

    <field>
      <name>Overflow</name>
      <comment>Clipping options for the viewport's boundary.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>INT</type>
      <description>
<p>Choose an overflow option to enforce or disable clipping of the viewport's content.  The default state is <code>VISIBLE</code>. Altering the overflow state affects both the X and Y axis.  To set either axis independently, set <field>OverflowX</field> and <field>OverflowY</field>.</p>
<p>If the viewport's <field>AspectRatio</field> is set to <code>SLICE</code> then it will have priority over the overflow setting.</p>
      </description>
    </field>

    <field>
      <name>OverflowX</name>
      <comment>Clipping options for the viewport's boundary on the x axis.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>INT</type>
      <description>
<p>Choose an overflow option to enforce or disable clipping of the viewport's content.  The default state is <code>VISIBLE</code>. If the viewport's <field>AspectRatio</field> is set to <code>SLICE</code> then it will have priority over the overflow setting.</p>
<p>This option controls the x axis only.</p>
      </description>
    </field>

    <field>
      <name>OverflowY</name>
      <comment>Clipping options for the viewport's boundary on the y axis.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>INT</type>
      <description>
<p>Choose an overflow option to enforce or disable clipping of the viewport's content.  The default state is <code>VISIBLE</code>. If the viewport's <field>AspectRatio</field> is set to <code>SLICE</code> then it will have priority over the overflow setting.</p>
<p>This option controls the y axis only.</p>
      </description>
    </field>

    <field>
      <name>ViewHeight</name>
      <comment>The height of the viewport's source area.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>DOUBLE</type>
      <description>
<p>The area defined by (<field>ViewX</field>,<field>ViewY</field>) and (<field>ViewWidth</field>,<field>ViewHeight</field>) declare the source area covered by the viewport.  The rendered graphics in the source area will be repositioned and scaled to the area defined by (X,Y) and (Width,Height).</p>
      </description>
    </field>

    <field>
      <name>ViewWidth</name>
      <comment>The width of the viewport's source area.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>DOUBLE</type>
      <description>
<p>The area defined by (<field>ViewX</field>,<field>ViewY</field>) and (<field>ViewWidth</field>,<field>ViewHeight</field>) declare the source area covered by the viewport.  The rendered graphics in the source area will be repositioned and scaled to the area defined by (<field>X</field>,<field>Y</field>) and (<field>Width</field>,<field>Height</field>).</p>
      </description>
    </field>

    <field>
      <name>ViewX</name>
      <comment>The horizontal position of the viewport's source area.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>DOUBLE</type>
      <description>
<p>The area defined by (<field>ViewX</field>,<field>ViewY</field>) and (<field>ViewWidth</field>,<field>ViewHeight</field>) declare the source area covered by the viewport.  The rendered graphics in the source area will be repositioned and scaled to the area defined by (<field>X</field>,<field>Y</field>) and (<field>Width</field>,<field>Height</field>).</p>
      </description>
    </field>

    <field>
      <name>ViewY</name>
      <comment>The vertical position of the viewport's source area.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>DOUBLE</type>
      <description>
<p>The area defined by (<field>ViewX</field>,<field>ViewY</field>) and (<field>ViewWidth</field>,<field>ViewHeight</field>) declare the source area covered by the viewport.  The rendered graphics in the source area will be repositioned and scaled to the area defined by (<field>X</field>,<field>Y</field>) and (<field>Width</field>,<field>Height</field>).</p>
      </description>
    </field>

    <field>
      <name>Width</name>
      <comment>The width of the viewport's target area.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>DOUBLE</type>
      <description>
<p>The width of the viewport's target area is defined here as a fixed or relative value.  The default value is 100% for full coverage.</p>
      </description>
    </field>

    <field>
      <name>X</name>
      <comment>Positions the viewport on the x-axis.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>DOUBLE</type>
      <description>
<p>The display position targeted by the viewport is declared by the (X,Y) field values.  Coordinates can be expressed as fixed or relative pixel units.</p>
<p>If an offset from the edge of the parent is desired, the <field>XOffset</field> field must be defined.  If a X and XOffset value are defined together, the width of the viewport is computed on-the-fly and will change in response to the parent's width.</p>
      </description>
    </field>

    <field>
      <name>XOffset</name>
      <comment>Positions the viewport on the x-axis.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>DOUBLE</type>
      <description>
<p>The display position targeted by the viewport is declared by the (X,Y) field values.  Coordinates can be expressed as fixed or relative pixel units.</p>
<p>If an offset from the edge of the parent is desired, the <field>XOffset</field> field must be defined.  If a X and XOffset value are defined together, the width of the viewport is computed on-the-fly and will change in response to the parent's width.</p>
      </description>
    </field>

    <field>
      <name>Y</name>
      <comment>Positions the viewport on the y-axis.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>DOUBLE</type>
      <description>
<p>The display position targeted by the viewport is declared by the (X,Y) field values.  Coordinates can be expressed as fixed or relative pixel units.</p>
<p>If an offset from the edge of the parent is desired, the <field>YOffset</field> must be defined.  If a Y and YOffset value are defined together, the height of the viewport is computed on-the-fly and will change in response to the parent's height.</p>
      </description>
    </field>

    <field>
      <name>YOffset</name>
      <comment>Positions the viewport on the y-axis.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>DOUBLE</type>
      <description>
<p>The display position targeted by the viewport is declared by the (X,Y) field values.  Coordinates can be expressed as fixed or relative pixel units.</p>
<p>If an offset from the edge of the parent is desired, the <field>YOffset</field> must be defined.  If a Y and YOffset value are defined together, the height of the viewport is computed on-the-fly and will change in response to the parent's height.</p>
      </description>
    </field>

  </fields>
  <types>
    <constants lookup="ARF" comment="Aspect ratios control alignment, scaling and clipping.">
      <const name="MEET">Aspect ratio is preserved. The entire viewbox will be visible in the viewport.  The viewbox is scaled up as much as possible.</const>
      <const name="NONE">Scale the viewbox to match the size of the viewport.  Aspect ratio is not preserved.</const>
      <const name="SLICE">Aspect ratio is preserved. The viewbox can extend beyond the viewport's edges on one axis.  The viewbox is scaled up as much as possible.</const>
      <const name="X_MAX">Align to the right.</const>
      <const name="X_MID">Align to the horizontal center.</const>
      <const name="X_MIN">Align to the left.</const>
      <const name="Y_MAX">Align to the bottom.</const>
      <const name="Y_MID">Align to the vertical center.</const>
      <const name="Y_MIN">Align to the top.</const>
    </constants>

  </types>
  <structs>
  </structs>
</book>
