<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="class.xsl"?>

<book>
  <info>
    <name>ImageFX</name>
    <type>class</type>
    <module>Vector</module>
    <comment>Renders a bitmap image in the effect pipeline.</comment>
    <version>1</version>
    <id>9bba5446</id>
    <idstring>ID_IMAGEFX</idstring>
    <category>Graphics</category>
    <include>modules/imagefx.h</include>
    <copyright>Paul Manias Â© 2010-2023</copyright>
    <description>
<p>The ImageFX class will render a source image into a given rectangle within the current user coordinate system.  The client has the option of providing a pre-allocated Bitmap or the path to a <class name="Picture">Picture</class> file as the source.</p>
<p>If a pre-allocated <class name="Bitmap">Bitmap</class> is to be used, it must be created under the ownership of the ImageFX object, and this must be done prior to initialisation.  It is required that the bitmap uses 32 bits per pixel and that the alpha channel is enabled.</p>
<p>If a source picture file is referenced, it will be upscaled to meet the requirements automatically as needed.</p>
<p>Technically the ImageFX object is represented by a new viewport, the bounds of which are defined by attributes X, Y, Width and Height.  The placement and scaling of the referenced image is controlled by the <field>AspectRatio</field> field.</p></description>
    <source>
      <file path="filters/">filter_image.cpp</file>
    </source>
  </info>

  <actions>
    <action>
      <name>Draw</name>
      <comment>Render the effect to the target bitmap.</comment>
    </action>

  </actions>

  <fields>
    <field>
      <name>AspectRatio</name>
      <comment>SVG compliant aspect ratio settings.</comment>
      <access read="G" write="S">Get/Set</access>
      <type lookup="ARF">INT</type>
      <description>
<types lookup="ARF"/>
      </description>
    </field>

    <field>
      <name>Bitmap</name>
      <comment>The <class name="Bitmap">Bitmap</class> being used as the image source.</comment>
      <access read="G">Get</access>
      <type>OBJECTPTR</type>
      <description>
<p>Reading the Bitmap field will return the <class name="Bitmap">Bitmap</class> that is being used as the image source.  Note that if a custom Bitmap is to be used, the correct way to do this as to assign it to the ImageFX object via ownership rules.</p>
<p>If a picture image has been processed by setting the <field>Path</field>, the Bitmap will refer to the content that has been processed.</p>
      </description>
    </field>

    <field>
      <name>Path</name>
      <comment>Path to an image file supported by the Picture class.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>STRING</type>
    </field>

    <field>
      <name>ResampleMethod</name>
      <comment>The resample algorithm to use for transforming the source image.</comment>
      <access read="G" write="S">Get/Set</access>
      <type>INT</type>
    </field>

    <field>
      <name>XMLDef</name>
      <comment>Returns an SVG compliant XML string that describes the filter.</comment>
      <access read="G">Get</access>
      <type>STRING</type>
    </field>

  </fields>
  <types>
    <constants lookup="ARF" comment="Aspect ratios control alignment, scaling and clipping.">
      <const name="MEET">Aspect ratio is preserved. The entire viewbox will be visible in the viewport.  The viewbox is scaled up as much as possible.</const>
      <const name="NONE">Scale the viewbox to match the size of the viewport.  Aspect ratio is not preserved.</const>
      <const name="SLICE">Aspect ratio is preserved. The viewbox can extend beyond the viewport's edges on one axis.  The viewbox is scaled up as much as possible.</const>
      <const name="X_MAX">Align to the right.</const>
      <const name="X_MID">Align to the horizontal center.</const>
      <const name="X_MIN">Align to the left.</const>
      <const name="Y_MAX">Align to the bottom.</const>
      <const name="Y_MID">Align to the vertical center.</const>
      <const name="Y_MIN">Align to the top.</const>
    </constants>

  </types>
  <structs>
  </structs>
</book>
