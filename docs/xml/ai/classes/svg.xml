<?xml version="1.0" encoding="UTF-8"?>
<ai:cl xmlns:ai="http://parasol-framework.org/ai-docs" n="SVG" mod="SVG" c="Provides comprehensive support for parsing, rendering and animating SVG documents." cat="GUI" id="0b88abb5" v="1">
  <ai:a n="Activate" c="Initiates playback of SVG animations." p="ERR acActivate(*Object)"/>
  <ai:a n="DataFeed" c="Processes SVG data streams for incremental document parsing." p="ERR acDataFeed(*Object, OBJECTID Object, DATA Datatype, APTR Buffer, INT Size)">
    <ai:i n="Object" t="OBJECTID" c="Must refer to the unique ID of the object that you represent. If you do not represent an object, set this parameter to the current task ID."/>
    <ai:i n="Datatype" t="DATA" c="The type of data being sent."/>
    <ai:i n="Buffer" t="APTR" c="The data being sent to the target object."/>
    <ai:i n="Size" t="INT" c="The size of the data in Buffer."/>
  </ai:a>
  <ai:a n="Deactivate" c="Halts all SVG animation playback and suspends frame processing." p="ERR acDeactivate(*Object)"/>
  <ai:a n="Init" c="Initialises the SVG object and processes source content." p="ERR InitObject(*Object)"/>
  <ai:a n="SaveImage" c="Saves the SVG document as a PNG image." p="ERR acSaveImage(*Object, OBJECTID Dest, CLASSID ClassID)">
    <ai:i n="Dest" t="OBJECTID" c="Refers to an object that will receive the encoded image data."/>
    <ai:i n="ClassID" t="CLASSID" c="The Picture class to use for encoding the image data."/>
  </ai:a>
  <ai:a n="SaveToObject" c="Saves the SVG document to a data object." p="ERR acSaveToObject(*Object, OBJECTID Dest, CLASSID ClassID)">
    <ai:i n="Dest" t="OBJECTID" c="Refers to an object that will receive the encoded data."/>
    <ai:i n="ClassID" t="CLASSID" c="Can refer to a sub-class that should be used when encoding the data."/>
  </ai:a>
  <ai:m n="ParseSymbol" c="Instantiates an SVG symbol definition within a target viewport." p="ERR svg::ParseSymbol(OBJECTPTR Object, CSTRING ID, objVectorViewport * Viewport)">
    <ai:i n="ID" t="CSTRING" c="Name of the symbol to parse."/>
    <ai:i n="Viewport" t="objVectorViewport *" c="The target viewport."/>
  </ai:m>
  <ai:m n="Render" c="Performs high-quality rasterisation of the SVG document to a target bitmap." p="ERR svg::Render(OBJECTPTR Object, objBitmap * Bitmap, INT X, INT Y, INT Width, INT Height)">
    <ai:i n="Bitmap" t="objBitmap *" c="The target bitmap object to receive the rendered content."/>
    <ai:i n="X" t="INT" c="Horizontal position within the target bitmap."/>
    <ai:i n="Y" t="INT" c="Vertical position within the target bitmap."/>
    <ai:i n="Width" t="INT" c="Desired width of the rendered output in pixels."/>
    <ai:i n="Height" t="INT" c="Desired height of the rendered output in pixels."/>
  </ai:m>
  <ai:f n="Colour" c="Defines the default fill to use for currentColor references." t="STRING" a="GS"/>
  <ai:f n="Flags" c="Configuration flags that modify SVG processing behaviour." t="SVF" a="RW"/>
  <ai:f n="Frame" c="Constrains rendering to a specific frame number for frame-based display systems." t="INT" a="RW"/>
  <ai:f n="FrameCallback" c="Function callback executed after each animation frame preparation." t="FUNCTION" a="GS"/>
  <ai:f n="FrameRate" c="Controls the maximum frame rate for SVG animation playback." t="INT" a="RS"/>
  <ai:f n="Path" c="File system path to the source SVG document." t="STRING" a="RS"/>
  <ai:f n="Scene" c="Reference to the VectorScene object containing the SVG scene graph." t="OBJECTPTR" a="G"/>
  <ai:f n="Statement" c="String containing complete SVG document markup." t="STRING" a="RS"/>
  <ai:f n="Target" c="Destination container for the generated SVG scene graph elements." t="OBJECTPTR" a="RS"/>
  <ai:f n="Title" c="The title of the SVG document." t="STRING" a="RS"/>
  <ai:f n="Viewport" c="Reference to the primary VectorViewport containing the SVG document content." t="OBJECTPTR" a="G"/>
</ai:cl>
