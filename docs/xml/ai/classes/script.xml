<?xml version="1.0" encoding="UTF-8"?>
<ai:cl xmlns:ai="http://parasol-framework.org/ai-docs" n="Script" mod="Core" c="The Script class defines a common interface for script execution." cat="Data" id="1b600fba" v="1">
  <ai:a n="Activate" c="Executes the script." p="ERR acActivate(*Object)"/>
  <ai:a n="GetKey" c="Script parameters can be retrieved through this action." p="ERR acGetKey(*Object, CSTRING Key, STRING Value, INT Size)">
    <ai:i n="Key" t="CSTRING" c="The name of a key value."/>
    <ai:i n="Value" t="STRING" c="Pointer to a buffer space large enough to hold the retrieved value."/>
    <ai:i n="Size" t="INT" c="Indicates the byte size of the Buffer."/>
  </ai:a>
  <ai:a n="Reset" c="Resets an object to its original state." p="ERR acRefresh(*Object)"/>
  <ai:a n="SetKey" c="Script parameters can be set through this action." p="ERR acSetKey(*Object, CSTRING Key, CSTRING Value)">
    <ai:i n="Key" t="CSTRING" c="The name of the target key."/>
    <ai:i n="Value" t="CSTRING" c="The string value to associate with Key."/>
  </ai:a>
  <ai:m n="Callback" c="An internal method for managing callbacks." p="ERR sc::Callback(OBJECTPTR Object, INT64 ProcedureID, const struct ScriptArg * Args, INT TotalArgs, ERR * Error)">
    <ai:i n="ProcedureID" t="INT64" c="An identifier for the target procedure."/>
    <ai:i n="Args" t="const struct ScriptArg *" c="Optional CSV string containing parameters to pass to the procedure."/>
    <ai:i n="TotalArgs" t="INT" c="The total number of parameters in the Args parameter."/>
    <ai:i n="Error" t="ERR *" c="The error code returned from the script, if any."/>
    <ai:e c="Okay"/>
    <ai:e c="Args"/>
  </ai:m>
  <ai:m n="DerefProcedure" c="Dereferences an acquired procedure." p="ERR sc::DerefProcedure(OBJECTPTR Object, FUNCTION * Procedure)">
    <ai:i n="Procedure" t="FUNCTION *" c="The procedure to be dereferenced."/>
    <ai:e c="Okay"/>
    <ai:e c="NullArgs"/>
  </ai:m>
  <ai:m n="Exec" c="Executes a procedure in the script." p="ERR sc::Exec(OBJECTPTR Object, CSTRING Procedure, const struct ScriptArg * Args, INT TotalArgs)">
    <ai:i n="Procedure" t="CSTRING" c="The name of the procedure to execute, or NULL for the default entry point."/>
    <ai:i n="Args" t="const struct ScriptArg *" c="Optional parameters to pass to the procedure."/>
    <ai:i n="TotalArgs" t="INT" c="Total number of Args provided."/>
    <ai:e c="Okay"/>
    <ai:e c="Args"/>
    <ai:e c="NullArgs"/>
  </ai:m>
  <ai:m n="GetProcedureID" c="Converts a procedure name to an ID." p="ERR sc::GetProcedureID(OBJECTPTR Object, CSTRING Procedure, INT64 * ProcedureID)">
    <ai:i n="Procedure" t="CSTRING" c="The name of the procedure."/>
    <ai:i n="ProcedureID" t="INT64 *" c="The computed ID will be returned in this parameter."/>
    <ai:e c="Okay"/>
    <ai:e c="NullArgs"/>
  </ai:m>
  <ai:f n="CacheFile" c="Compilable script languages can be compiled to a cache file." t="STRING" a="GS"/>
  <ai:f n="CurrentLine" c="Indicates the current line being executed when in debug mode." t="INT" a="R"/>
  <ai:f n="Error" c="If a script fails during execution, an error code may be readable here." t="ERR" a="R"/>
  <ai:f n="ErrorString" c="A human readable error string may be declared here following a script execution failure." t="STRING" a="GS"/>
  <ai:f n="Flags" c="Optional flags." t="SCF" a="RI"/>
  <ai:f n="Language" c="Indicates the language (locale) that the source script is written in." t="STRING" a="G"/>
  <ai:f n="LineOffset" c="For debugging purposes, this value is added to any message referencing a line number." t="INT" a="RW"/>
  <ai:f n="Path" c="The location of a script file to be loaded." t="STRING" a="GS"/>
  <ai:f n="Procedure" c="Specifies a procedure to be executed from within a script." t="STRING" a="GS"/>
  <ai:f n="Results" c="Stores multiple string results for languages that support this feature." t="STRING []" a="GS"/>
  <ai:f n="Statement" c="Scripts can be executed from any string passed into this field." t="STRING" a="GS"/>
  <ai:f n="Target" c="Reference to the default container that new script objects will be initialised to." t="OBJECTID" a="RW"/>
  <ai:f n="TotalArgs" c="Reflects the total number of parameters used in a script object." t="INT" a="G"/>
  <ai:f n="WorkingPath" c="Defines the script's working path (folder)." t="STRING" a="GS"/>
</ai:cl>
