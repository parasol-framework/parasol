<?xml version="1.0" encoding="UTF-8"?>
<ai:cl xmlns:ai="http://parasol-framework.org/ai-docs" n="NetSocket" mod="Network" c="Manages network connections via TCP/IP sockets." cat="Network" id="2b439bb5" v="1">
  <ai:a n="Disable" c="Disables sending and receiving on the socket." p="ERR acDisable(*Object)">
    <ai:e c="Okay"/>
    <ai:e c="Failed"/>
  </ai:a>
  <ai:a n="Read" c="Read information from the socket." p="ERR acRead(*Object, APTR Buffer, INT Length, INT *Result)">
    <ai:i n="Buffer" t="APTR" c="Points a buffer that will receive the data."/>
    <ai:i n="Length" t="INT" c="The total number of bytes to read from the object. This value cannot exceed the size of the Buffer."/>
    <ai:i n="Result" t="INT" c="The Read action will write this parameter with the total number of bytes read into the Buffer."/>
    <ai:e c="Okay"/>
    <ai:e c="Failed"/>
    <ai:e c="InvalidState"/>
    <ai:e c="Disconnected"/>
    <ai:e c="NullArgs"/>
  </ai:a>
  <ai:a n="Write" c="Writes data to the socket." p="ERR acWrite(*Object, APTR Buffer, INT Length, INT Result)">
    <ai:i n="Buffer" t="APTR" c="A buffer containing the data that will be written to the object."/>
    <ai:i n="Length" t="INT" c="The total number of bytes to write to the object."/>
    <ai:i n="Result" t="INT" c="This parameter with be updated with the total number of bytes written from the Buffer."/>
  </ai:a>
  <ai:m n="Connect" c="Connects a NetSocket to an address." p="ERR ns::Connect(OBJECTPTR Object, CSTRING Address, INT Port)">
    <ai:i n="Address" t="CSTRING" c="String containing either a domain name (e.g. www.google.com) or an IP address (e.g. 123.123.123.123)"/>
    <ai:i n="Port" t="INT" c="Remote port to connect to."/>
    <ai:e c="Okay"/>
    <ai:e c="Failed"/>
    <ai:e c="Args"/>
    <ai:e c="InvalidState"/>
    <ai:e c="HostNotFound"/>
  </ai:m>
  <ai:m n="DisconnectClient" c="Disconnects all sockets connected to a specific client IP." p="ERR ns::DisconnectClient(OBJECTPTR Object, objNetClient * Client)">
    <ai:i n="Client" t="objNetClient *" c="The client to be disconnected."/>
    <ai:e c="Okay"/>
    <ai:e c="NullArgs"/>
    <ai:e c="WrongClass"/>
  </ai:m>
  <ai:m n="DisconnectSocket" c="Disconnects a single socket that is connected to a client IP address." p="ERR ns::DisconnectSocket(OBJECTPTR Object, objClientSocket * Socket)">
    <ai:i n="Socket" t="objClientSocket *" c="The client socket to be disconnected."/>
    <ai:e c="Okay"/>
    <ai:e c="NullArgs"/>
  </ai:m>
  <ai:m n="GetLocalIPAddress" c="Returns the IP address that the socket is locally bound to." p="ERR ns::GetLocalIPAddress(OBJECTPTR Object, struct IPAddress * Address)">
    <ai:i n="Address" t="struct IPAddress *" c="Pointer to an IPAddress structure which will be set to the result of the query if successful."/>
    <ai:e c="Okay"/>
    <ai:e c="Failed"/>
    <ai:e c="NullArgs"/>
  </ai:m>
  <ai:f n="Address" c="An IP address or domain name to connect to." t="STRING" a="RS"/>
  <ai:f n="Backlog" c="The maximum number of connections that can be queued against the socket." t="INT" a="RI"/>
  <ai:f n="ClientData" c="A client-defined value that can be useful in action notify events." t="APTR" a="RW"/>
  <ai:f n="ClientLimit" c="The maximum number of clients (unique IP addresses) that can be connected to a server socket." t="INT" a="RW"/>
  <ai:f n="Clients" c="For server sockets, lists all clients connected to the server." t="*NetClient" a="R"/>
  <ai:f n="Error" c="Information about the last error that occurred during a NetSocket operation" t="ERR" a="R"/>
  <ai:f n="Feedback" c="A callback trigger for when the state of the NetSocket is changed." t="FUNCTION" a="GS"/>
  <ai:f n="Flags" c="Optional flags." t="NSF" a="RW"/>
  <ai:f n="Handle" c="Platform specific reference to the network socket handle." t="APTR" a="GS"/>
  <ai:f n="Incoming" c="Callback that is triggered when the socket receives data." t="FUNCTION" a="GS"/>
  <ai:f n="MsgLimit" c="Limits the size of incoming and outgoing data packets." t="INT" a="RI"/>
  <ai:f n="OutQueueSize" c="The number of bytes on the socket's outgoing queue." t="INT" a="G"/>
  <ai:f n="Outgoing" c="Callback that is triggered when a socket is ready to send data." t="FUNCTION" a="GS"/>
  <ai:f n="Port" c="The port number to use for initiating a connection." t="INT" a="RI"/>
  <ai:f n="SSLCertificate" c="SSL certificate file to use if in server mode." t="STRING" a="RS"/>
  <ai:f n="SSLKeyPassword" c="SSL private key password." t="STRING" a="RS"/>
  <ai:f n="SocketLimit" c="Limits the number of connected sockets per client IP address." t="INT" a="RW"/>
  <ai:f n="State" c="The current connection state of the NetSocket object." t="NTC" a="GS"/>
  <ai:f n="TotalClients" c="Indicates the total number of clients currently connected to the socket (if in server mode)." t="INT" a="R"/>
</ai:cl>
