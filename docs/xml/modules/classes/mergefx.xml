<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="class.xsl"?>

<book>
  <info>
    <name>MergeFX</name>
    <type>class</type>
    <module>Vector</module>
    <comment>Combines multiple effects in sequence.</comment>
    <version>1</version>
    <id>be2da2d3</id>
    <idstring>ID_MERGEFX</idstring>
    <category>Graphics</category>
    <include>modules/mergefx.h</include>
    <copyright>Paul Manias Â© 2010-2025</copyright>
    <description>
<p>Use MergeFX to composite multiple input sources so that they are rendered on top of each other in a predefined sequence.</p>
<p>Many effects produce a number of intermediate layers in order to create the final output image.  This filter allows us to collapse those into a single image.  Although this could be done by using <code>n-1</code> Composite-filters, it is more convenient to have  this common operation available in this form, and offers the implementation some additional flexibility.</p></description>
    <source>
      <file path="filters/">filter_merge.cpp</file>
    </source>
  </info>

  <actions>
    <action>
      <name>Draw</name>
      <comment>Render the effect to the target bitmap.</comment>
      <prototype>ERR acDraw(*Object, DOUBLE X, DOUBLE Y, DOUBLE Width, DOUBLE Height)</prototype>
      <input>
        <param type="LONG" name="X">The X position of the region to be drawn.</param>
        <param type="LONG" name="Y">The Y position of the region to be drawn.</param>
        <param type="LONG" name="Width">The width of the region to be drawn.</param>
        <param type="LONG" name="Height">The height of the region to be drawn.</param>
      </input>
    </action>

  </actions>

  <fields>
    <field>
      <name>SourceList</name>
      <comment>A list of source types to be processed in the merge.</comment>
      <access read="R" write="S">Read/Set</access>
      <type>STRUCT []</type>
      <description>
<p>The list of sources is built as a simple array of MergeSource structures.</p>
<p>Input sources are defined by the SourceType field value.  In the case of <code>REFERENCE</code>, it is necessary to provide a direct pointer to the referenced effect in the Effect field, or an error will be returned.</p>
      </description>
    </field>

    <field>
      <name>XMLDef</name>
      <comment>Returns an SVG compliant XML string that describes the filter.</comment>
      <access read="G">Get</access>
      <type>STRING</type>
    </field>

  </fields>
  <structs>
  </structs>
</book>
