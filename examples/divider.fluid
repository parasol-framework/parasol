--[[
Demonstrates the functionality provided by the divider interface.
--]]

   require 'gui/divider'
   require 'gui/window'

   local win = gui.window({ title='Divider Example', insideWidth=400, insideHeight=200, minWidth=200, minHeight=50 })
   local viewport = win:clientViewport({ aspectRatio = ARF_MEET })

   -- Create left and right viewports with a vertical divider to split them through the middle.

   leftVP = viewport.new('VectorViewport', {
      name='left_vp', x = win.margins.left, y = win.margins.top,
      yOffset = win.margins.bottom, width = viewport.width / 2
   })
   leftVP.new('VectorRectangle', { -- Red
      name='left_fill', x=0, y=0, width='100%', height='100%', strokeWidth=2, stroke='rgb(128,0,0)', roundX=8, roundY=8
   })

   rightVP = viewport.new('VectorViewport', { -- This viewport is transparent because it contains rightA and rightB
      x = leftVP.x + leftVP.width, y = win.margins.top, xOffset = win.margins.right, yOffset = win.margins.bottom
   })

   gui.divider({ left = leftVP, right = rightVP, minA = 30, maxA = win.surface.insideWidth * 0.6, minB = 30 })

   -- The right-side viewport contains two child viewports with a horizontal divider to split them.

   rightA = rightVP.new('VectorViewport', { x=0, y=0, xOffset=0, height=(rightVP.height / 2) })
   rightA.new('VectorRectangle', {  -- Blue
      x=0, y=0, width='100%', height='100%', strokeWidth=2, stroke='rgb(0,0,128)', roundX=8, roundY=8
   })

   rightB = rightVP.new('VectorViewport', { x=0, xOffset=0, y=rightA.y + rightA.height, yOffset=0 })
   rightB.new('VectorRectangle', { -- Green
      x=0, y=0, width='100%', height='100%', strokeWidth=2, stroke='rgb(0,128,0)', roundX=8, roundY=8
   })

   gui.divider({ top = rightA, bottom = rightB, minA = 40, minB = 20 })

   -- Now show the window and enter the main loop.

   win:show()
   processing.sleep()
