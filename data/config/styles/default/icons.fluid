
   local mVec = mod.load('vector')

// Draw a background that will be placed under the icon mask.

function applyUnderlay(Bitmap, Filter, Class, Category, Icon)
   if (Filter) then Filter = Filter:lower() end
   if (Class) then Class = Class:lower() end
   if (Category) then Category = Category:lower() end
   if (Icon) then Icon = Icon:lower() end

   local err, path = mVec.GenerateRectangle(0, 0, Bitmap.width, Bitmap.height)

   if (Filter == 'pearl') then
      mVec.DrawPath(Bitmap, path, 0, nil, pearlGradient)
   elseif (Category == 'folders') and (Class == 'view') then
      mVec.DrawPath(Bitmap, path, 0, nil, cobaltGradient)
   elseif (Category == 'devices') and (Class == 'view') and (Icon == 'storage') then
      mVec.DrawPath(Bitmap, path, 0, nil, greenGradient)
   else
      mVec.DrawPath(Bitmap, path, 0, nil, carbonGradient)
   end
end

// Draw an overlay on top of the icon, or modify the icon with a filter, e.g. emboss.

function applyOverlay(Bitmap, Filter, Class, Category, Icon)

end

// Generate a gradient definition that can be used with DrawPath()

function verticalGradient(First, Last)
   local stops = { }
   local first = struct.new('GradientStop')
   first.offset    = 0
   first.rgb.red   = First.r / 255
   first.rgb.green = First.g / 255
   first.rgb.blue  = First.b / 255
   first.rgb.alpha = nz(First.a,255) / 255
   table.insert(stops, first)

   local last = struct.new('GradientStop')
   last.offset    = 1.0
   last.rgb.red   = Last.r / 255
   last.rgb.green = Last.g / 255
   last.rgb.blue  = Last.b / 255
   last.rgb.alpha = nz(Last.a,255) / 255
   table.insert(stops, last)

   return obj.new('VectorGradient', { stops=stops, x1=0, y1=0, x2=0, y2='100%' })
end

function styleName()
   return 'default'
end

   pearlGradient  = verticalGradient({ r=250,g=249,b=248 }, { r=210,g=211,b=212 })
   cobaltGradient = verticalGradient({ r=90,g=90,b=90 }, { r=70,g=70,b=110 })
   carbonGradient = verticalGradient({ r=96,g=95,b=94 }, { r=50,g=51,b=52 })
   greenGradient  = verticalGradient({ r=50,g=140,b=50 }, { r=50,g=90,b=50 })
