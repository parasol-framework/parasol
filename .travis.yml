# Build pipeline configuration for Travis CI

language: cpp
compiler:
- gcc

os:
- linux
- windows

jobs:
  include:
    - os: linux
      dist: xenial
    - os: windows

before_install:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
        choco uninstall -y mingw
        choco upgrade --no-progress -y msys2
        export msys2='cmd //C RefreshEnv.cmd '
        export msys2+='& set MSYS=winsymlinks:nativestrict '
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
        export msys2+=" -msys2 -c "\"\$@"\" --"
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-cmake mingw-w64-x86_64-toolchain
        ## Install more MSYS2 packages from https://packages.msys2.org/base here
        taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
        export PATH=/C/tools/msys64/mingw64/bin:$PATH
        export MAKE=mingw32-make  # so that Autotools can find it
        export # Print all environment variables for help debugging
        gcc -dM -E - < /dev/null # Print all GCC predefined constants to aid debugging
        ;;
      linux)
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get update -qq
        sudo apt-get install g++-9 libstdc++-9-dev
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libxrandr-dev libxxf86dga-dev
        ;;
    esac

install:
- |-
    case $TRAVIS_OS_NAME in
      linux)
        autoreconf -if
        DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
        mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
        travis_retry wget --no-check-certificate https://cmake.org/files/v3.18/cmake-3.18.4-Linux-x86_64.tar.gz
        tar -xvf cmake-3.18.4-Linux-x86_64.tar.gz > /dev/null
        mv cmake-3.18.4-Linux-x86_64 cmake-install
        PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
        cd ${TRAVIS_BUILD_DIR}
        ;;
    esac

before_cache:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        # https://unix.stackexchange.com/a/137322/107554
        $msys2 pacman --sync --clean --noconfirm
        ;;
    esac

cache:
  directories:
  - $HOME/AppData/Local/Temp/chocolatey
  - /C/tools/msys64

script:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        $mingw64 cmake -S . -B release -G"MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DDISABLE_SSL=TRUE -DCMAKE_INSTALL_PREFIX=install/parasol -DINSTALL_EXAMPLES=TRUE || travis_terminate 1
        $mingw64 cmake --build release -j 8 --verbose -- -O || travis_terminate 1
        ;;
      linux)
        cmake -S . -B release -DCMAKE_BUILD_TYPE=Release -DDISABLE_SSL=TRUE -DCMAKE_INSTALL_PREFIX=install/parasol -DINSTALL_EXAMPLES=TRUE -DRUN_ANYWHERE=TRUE || travis_terminate 1
        cmake --build release -j 8 -- -O || travis_terminate 1
        ;;
    esac

after_success:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        $mingw64 cmake --install release || travis_terminate 1
        $mingw64 $MAKE test -C release ARGS=--verbose || travis_terminate 1
        ;;
      linux)
        cmake --install release || travis_terminate 1
        make test -C release ARGS=--verbose || travis_terminate 1
        ;;
    esac

branches:
  only:
  - master
  - /test\/.*/
  - release

before_deploy:
- git config --local user.name "Paul Manias"
- git config --local user.email "paul@parasol.ws"
- export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d')-$(git log --format=%h -1)}
- git tag $TRAVIS_TAG
- tar -zc --directory=install -f ${TRAVIS_BUILD_DIR}/parasol-${TRAVIS_OS_NAME}-${TRAVIS_BUILD_NUMBER}.tar.gz parasol

deploy:
  provider: releases
  edge: true
  token: "${GITHUB_TOKEN}"
  file: ${TRAVIS_BUILD_DIR}/parasol-${TRAVIS_OS_NAME}-${TRAVIS_BUILD_NUMBER}.tar.gz
  on:
    branch: release
